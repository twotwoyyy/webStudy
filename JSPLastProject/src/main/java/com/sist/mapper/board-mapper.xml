<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.board-mapper">
<!-- 등록 -->
	<insert id="boardInsert" parameterType="BoardVO">
		<!-- myBatis의 sequence를 이용하는 방법 
			order (순서) 
			 : BEFORE (먼저 수행) => 자동 증가 먼저 한 후 인서트
			 : AFTER (나중 수행)
		-->
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(no)+1,1) as no FROM project_board
		</selectKey>
		INSERT INTO project_board(no,name,subject,content,pwd)
		VALUES(#{no},#{name},#{subject},#{content},#{pwd})
		<!-- VO => #{no}.... -->
	</insert>
<!-- 목록 
		인덱스 : primary key, uique => 자동 생성
-->
	<select id="boardListData" resultType="BoardVO" parameterType="java.util.Map">
		SELECT no,subject,name,TO_CHAR(regdate,'YYYY-MM-DD') as dbday,hit,num
		FROM (SELECT no,subject,name,regdate,hit,rownum as num
		FROM (SELECT /*+ INDEX_DESC(project_board pb_no_pk)*/no,subject,name,regdate,hit
		FROM project_board))
		WHERE num BETWEEN #{start} AND #{end}
		<!-- map => #{start} key값 map.put("start",10) map.get("start")값  -->
	</select>
	<select id="boardRowCount" resultType="int">
		SELECT COUNT(*) FROM project_board
	</select>
<!-- 상세보기 -->
	<update id="hitIncrement" parameterType="int">
		UPDATE project_board SET
		hit=hit+1
		WHERE no=#{no}
	</update>
	<!-- 
		parameterType="string" parameterType="java.lang.String"
		parameterType="hashmap" parameterType="java.util.Map" => 인식 못하면 후자로 써야 한다 
		parameterType="int" parameterType="java.lang.Integer" => 인식 못하면 후자로 써야 한다 
	 -->
	<select id="boardDetailData" resultType="BoardVO" parameterType="int">
		SELECT no,name,subject,content,TO_CHAR(regdate,'YYYY-MM-DD HH24:MI:SS') as dbday,hit
		FROM project_board
		WHERE no=#{no}
	</select>
<!-- 수정 -->
	<select id="boardGetPassword" resultType="string" parameterType="int">
		SELECT pwd FROM project_board
		WHERE no=#{no}
	</select>
	<update id="boardUpdate" parameterType="BoardVO">
		UPDATE project_board 
		SET name=#{name}, subject=#{subject}, content=#{content}
		WHERE no=#{no}
	</update>
<!-- 삭제 -->
	<delete id="boardDelete" parameterType="int">
		DELETE FROM project_board
		WHERE no=#{no}
	</delete>
</mapper>